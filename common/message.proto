syntax = "proto2";

package InSECTS;

import "config.proto";

// Every message should be wrapped in the Message type or it wont send/receive
message Message {
    optional string destination = 1;
    optional string sender = 2;

    optional bool ack = 3;
    optional bool disconnect = 4;

    optional Command command = 5;
    optional Telemetry telemetry = 6;

    optional ConfigParams config_params = 7;
    optional bool request_config = 8;
}


//---------------------------------------------
//          WATERLILY Command Messages Here
//---------------------------------------------

message commsDepotClientHeartBeat {
    optional bool is_alive = 1;
}
message commsDepotArduinoReset {
    optional bool is_reset = 1;
}
message commsClientArduinoReset {
    optional bool is_reset = 1;
}
message depotClientOpenFillValve {
    optional bool is_open = 1;
}
message clientDepotStopFill {
    optional bool is_stop_fill = 1;
}
message clientDepotReadyForMate {
    optional bool is_ready = 1;
}
message PropFillLevel {
    optional double level = 1;
message depotClientReadyForMate {
    optional bool is_ready = 1;
}
message depotClientSeparate {
    optional bool is_separate = 1;
}

//---------------------------------------------
//          WATERLILY Telemetry Messages Here
//---------------------------------------------
message propDepotTankPropMass {
    optional double prop_mass = 1;
}
message propClientTankPropMass {
    optional double prop_mass = 1;
}
message propDepotFillValveIsOpen {
    optional bool is_open = 1;
}
message gncDepotMagnetic {
    optional double x = 1;
    optional double y = 2;
}
message gncClientMagnetic {
    optional double x = 1;
    optional double y = 2;
}
message gncClientRotationCommand {
    optional int32 command = 1;
}
message dockingDepotClientAreAttached {
    optional bool are_attached = 1;
}
message dockingDepotConnectionVoltage {
    optional double connection_voltage = 1;
}
message dockingClientConnectionVoltage {
    optional double connection_voltage = 1;
}
message cdhClient {
    optional bool is_running = 1;
    optional bool is_healthy = 2;
}
message cdhDepot {
    optional bool is_running = 1;
    optional bool is_healthy = 2;
}

//---------------------------------------------
//          INSECTS Command Messages Here
//---------------------------------------------

message Command {
    optional SetServoPosition set_servo_position = 1;
    optional SetFanSpeed set_fan_speed = 2;
    optional SetFanState set_fan_state = 3;
    optional SetAutonomyState set_autonomy_state = 4;
}

message SetServoPosition {
    optional int32 servo_pos = 1;
}

message SetFanSpeed {
    optional int32 fan_speed = 1;
}

message SetFanState {
    optional bool fan_state = 1;
}

message SetAutonomyState {
    optional bool autonomy_state = 1;
}

//---------------------------------------------
//          Telemetry Messages Here
//---------------------------------------------
message Telemetry {
    optional TemperatureData temperature_data = 1;
    optional FanSpeedData fan_speed_reading = 2;
    optional PropFillLevel level = 3;
}

message TemperatureData {
    optional int32 sensor_id = 1;
    optional double sensor_value = 2;
}

message FanSpeedData {
    optional int32 fan_id = 1;
    optional double fan_speed = 2;
}

//---------------------------------------------
//          Infrastructure Messages Here
//---------------------------------------------